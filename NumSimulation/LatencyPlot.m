% Script to determine latency for final plotsdatadir = '../data-new';nRarr = [1, 2, 3, 4, 5];hRarr = [1.5, 2, 3, 4, 5];for NAI = 0:24  hRidx = floor(NAI/5) + 1;  nRidx = mod(NAI, 5) + 1;hbs = hRarr(hRidx);nbs = nRarr(nRidx);load_string = [datadir, '/combined-numBS_', num2str(nbs), '-heightBS_', num2str(hbs), '-DurationList.mat'];  load(load_string); % loads a durationListload_string = [datadir, '/combined-numBS_', num2str(nbs), '-heightBS_', num2str(hbs), '-Durations-Probabilities.mat'];  load(load_string);l = zeros(1,sum(durationList));current_pos = 0;for dIdx = 1:length(durationList)    d = durationList(dIdx);    l(current_pos+1:current_pos+d) = 1:d;    current_pos=current_pos+d;endmProbOutage = mean(mean(Probability));outageInstances = sum(durationList);nZeros = outageInstances/mProbOutage - outageInstances;%disp(mProbOutage);%disp(outageInstances);%disp(nZeros);l = sort(l);l = [0 l];nZeros -= 1;total_length = ceil(nZeros) + length(l);percnt1 = 99.99999; % High realability, 10^-5percnt2 = 99.999; % Moderate realability, 10^-3percnt3 = 99.9; % Low realability, 10^-1highRelLatIdx = ceil( 0.01*percnt1*total_length - nZeros);modRelLatIdx  = ceil( 0.01*percnt2*total_length - nZeros);lowRelLatIdx  = ceil( 0.01*percnt3*total_length - nZeros);highRelLat = l(max(1, highRelLatIdx));modRelLat  = l(max(1, modRelLatIdx));lowRelLat  = l(max(1, lowRelLatIdx));disp('Base station height = ');disp(hbs);disp('Number of Base stations = ')disp(nbs);disp('Percentile Latency (High, 10^-5) = ')disp(highRelLat);disp('Percentile Latency (Moderate, 10^-3) = ')disp(modRelLat);disp('Percentile Latency (Low, 10^-1) = ')disp(lowRelLat);end